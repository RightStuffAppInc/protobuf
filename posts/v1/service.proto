syntax = "proto3";

package posts;

import "export/v1/message.proto";

service Posts {
    rpc CreatePost(CreatePostRequest) returns (PostReply) {}
    rpc GetPost(GetPostRequest) returns (PostReply) {}
    rpc UpdatePost(UpdatePostRequest) returns (PostReply) {}
    rpc DeletePost(DeletePostRequest) returns (PostReply) {}

    rpc GetPosts(GetPostsRequest) returns (PostsReply) {}
    // rpc GetPostsByCreator(GetPostsByCreatorRequest) returns (PostsReply) {}

    rpc ExportPosts(ExportRequest) returns (ExportReply) {}

    rpc CreateLike(CreateLikeRequest) returns  (LikeReply) {}
    rpc GetLike(GetLikeRequest) returns (LikeReply) {}
    rpc UpdateLikeAsLiker(UpdateLikeAsLikerRequest) returns (LikeReply) {}
    rpc UpdateLikeAsCreator(UpdateLikeAsCreatorRequest) returns (LikeReply) {}
    rpc DeleteLike(DeleteLikeRequest) returns (LikeReply) {}

    rpc GetLikes(GetLikesRequest) returns (LikesReply) {}
    // rpc GetRequestedLikesByPost(GetRequestedLikesByPostRequest) returns (LikesReply) {}
    
    rpc GetTotalUnseenLikesByCreator(GetTotalUnseenLikesByCreatorRequest) returns (TotalReply) {}
    rpc EmitTotalUnseenLikesByCreator(EmitTotalUnseenLikesByCreatorRequest) returns (TotalReply) {}
}

enum Visibility {
    VISIBILITY_DEFAULT = 0;
    VISIBILITY_LIKES = 1;
}

message PostReply {
    string post_id = 1;
    string creator_id = 2;
    
    bool is_deleted = 3;
    string expires_at = 4;
    
    string created_at = 10;
    string updated_at = 11;
    string deleted_at = 12;

    Visibility visibility = 20;

    string text = 100;
    string image_id = 200;
    string video_id = 300;
}

message PostsReply {
    repeated PostReply posts = 1;
    string next = 2;
}

message CreatePostRequest {
    string creator_id = 1;
    Visibility visibility = 20;

    optional string text = 100;
    optional string image_id = 200;
    optional string video_id = 300;
}

message GetPostRequest {
    string post_id = 1;
}

message UpdatePostRequest {
    string post_id = 1;
    string creator_id = 2;

    Visibility visibility = 20;

    optional string text = 100;
    optional string image_id = 200;
    optional string video_id = 300;
}

message DeletePostRequest {
    string post_id = 1;
    string creator_id = 2;
}

message GetPostsRequest {
    string cursor = 1;
    int32 limit = 2;
}

message GetPostsByCreatorRequest {
    string creator_id = 1;
    string cursor = 2;
    int32 limit = 3;
}

// LIKES //
enum Status {
    STATUS_REQUESTED = 0;
    STATUS_ACCEPTED = 2;
    STATUS_REJECTED = 3;
}

message LikeReply {
    string like_id = 1;
    string post_id = 2;
    string liker_id = 3;
    bool is_deleted = 4;

    string created_at = 10;
    string updated_at = 11;
    string deleted_at = 12;

    Status status = 100;

    bool is_seen = 110;
    string seen_at = 111;

    string text = 200;
    string video_id = 300;
}

message LikesReply {
    repeated LikeReply likes = 1;
    string next = 2;
}

message CreateLikeRequest {
    string post_id = 2;
    string liker_id = 3;

    string text = 200;
    string video_id = 300;
}

message GetLikeRequest {
    string like_id = 1;
}

message UpdateLikeAsLikerRequest {
    string like_id = 1;
    string liker_id = 3;

    optional string text = 200;
    optional string video_id = 300;
}

message UpdateLikeAsCreatorRequest {
    string like_id = 1;
    string creator_id = 2;

    Status status = 100;

}

message DeleteLikeRequest {
    string like_id = 1;
    string liker = 3;
}

message GetLikesRequest {
    message Query {
        optional string liker_id = 1;
    }
    Query query = 1;
    string cursor = 2;
    int32 limit = 3;
}

message GetRequestedLikesByPostRequest {
    string post_id = 2;
}

// TOTAL //

message TotalReply {
    int32 total = 1;
}

message GetTotalUnseenLikesByCreatorRequest {
    string creator_id = 1;
}

message EmitTotalUnseenLikesByCreatorRequest {
    string creator_id = 1;
}