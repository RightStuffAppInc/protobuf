syntax = "proto3";

package notifications;

service Notifications {
    rpc GetUser(GetUserRequest) returns (UserReply) {}
    rpc UpdateUser(UpdateUserRequest) returns (UserReply) {}

    rpc AddToken(AddTokenRequest) returns (UserReply) {}
    rpc ClearToken(ClearTokenRequest) returns (UserReply) {}

    rpc SendBadge(SendBadgeRequest) returns (BadgeReply) {}

    rpc AnnouncementCreate(AnnouncementCreateRequest) returns (AnnouncementReply) {}
    rpc AnnouncementGet(AnnoucementGetRequest) returns (AnnouncementReply) {}
    rpc AnnouncementUpdate(AnnoucementUpdateRequest) returns (AnnouncementReply) {}
    rpc AnnouncementSend(AnnouncementSendRequest) returns (AnnouncementReply) {}
}

message UserReply {
    string user_id = 1;
    bool likes = 2;
    bool matches = 3;
    bool messages = 4;
    bool promotions = 5;
    bool announcements = 6;

    message Token {
        string token = 1;
        string created_at = 2;
    }

    repeated Token tokens = 10;
}

message GetUserRequest {
    string user_id = 1;
}

message UpdateUserRequest {
    string user_id = 1;
    optional bool likes = 2;
    optional bool matches = 3;
    optional bool messages = 4;
    optional bool promotions = 5;
    optional bool announcements = 6;
}

enum TokenType {
    IOS = 0;
    ANDROID = 1;
}

message AddTokenRequest {
    string user_id = 1;
    string token = 2;
    TokenType token_type = 3;
}

message ClearTokenRequest {
    string user_id = 1;
    string token = 2;
}

message BadgeReply {
    string user_id = 1;
    int32 badge = 2;
}

message SendBadgeRequest {
    string user_id = 1;
}

/* Announcements */

message AnnouncementReply {
    string announcement_id = 1;
    string created_at = 2;
    string updated_at = 3;
    
    string title = 11;
    string body = 12;
    
    int32 total = 20; 
    int32 success = 21;
    int32 error = 22;
}

message AnnouncementCreateRequest {
    string title = 11;
    string body = 12;
}

message AnnoucementUpdateRequest {
    string announcement_id = 1;
    
    string title = 11;
    string body = 12;
}

message AnnoucementGetRequest {
    string announcement_id = 1;
}

message AnnouncementSendRequest {
    string announcement_id = 1;
    repeated string recipient_ids = 2;
    int32 limit = 3;
}

/* Notification */

message NotificationReply {
    string notification_id = 1;
    string created_at = 2;
    string updated_at = 3;

    string recipient_id = 10;
    string announcement_id = 11;
    bool is_success = 12;
    string message = 13;
}

message NotificationGetRequest {
    string notification_id = 1;
}